buildscript {
  ext.getExtOrDefault = {name ->
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['Vosk_' + name]
  }

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:8.7.2"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${getExtOrDefault('kotlinVersion')}"
  }
}


apply plugin: "com.android.library"
apply plugin: "kotlin-android"

apply plugin: "com.facebook.react"

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["_" + name]).toInteger()
}

android {
  
    namespace "com.vosk"

    compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
  }

  buildFeatures {
    buildConfig true
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets {
    main {
      assets.srcDirs += [
        "$buildDir/generated/assets"
      ]
      java.srcDirs += [
        "generated/java",
        "generated/jni"
      ]
    }
  }
}

repositories {
  mavenCentral()
  google()
}

// Generate UUIDs for each models contained in app/assets/model*
tasks.register('genUUID') {
  doLast {
    // Get the parent directory of rootDir
    def androidAppDir = rootDir.toPath().parent.toFile()
    def srcDir = file("$androidAppDir/assets")
    println "Searching for model directories in: $srcDir"
    fileTree(dir: "$srcDir", exclude: ['*/*']).visit { fileDetails ->
      if (fileDetails.directory && fileDetails.file.name.startsWith("model")) {
        def outDir = file("$srcDir/$fileDetails.relativePath")

        println "Processing model directory: $outDir"

        def androidOutDir = file("$buildDir/generated/assets/$fileDetails.relativePath")
        mkdir androidOutDir
        def outFile = file("$androidOutDir/uuid")
        println "Generating UUID for model ${fileDetails.relativePath} in $outFile"
        // Copy all files from outDir to androidOutDir (Important: keep folder structure)
        copy {
          from outDir
          into androidOutDir
        }
        outFile.text = UUID.randomUUID().toString()
      }
    }
  }
}
preBuild.dependsOn genUUID

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  implementation "com.facebook.react:react-android"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  // From node_modules
  implementation 'net.java.dev.jna:jna:5.17.0@aar'
  implementation 'com.alphacephei:vosk-android:0.3.70@aar'
}

